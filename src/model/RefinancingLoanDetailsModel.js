/**
 * Third Party Loan API
 * Through this API you can can retrieve loan data
 *
 * The version of the OpenAPI document: v1.0
 * Contact: mark.ufland@youlend.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RefinancingLoanDetailsModel model module.
 * @module model/RefinancingLoanDetailsModel
 * @version v1.0
 */
class RefinancingLoanDetailsModel {
    /**
     * Constructs a new <code>RefinancingLoanDetailsModel</code>.
     * A model characterising the refinancing of a given loan, if applicable; here the \&quot;old loan\&quot; is that which was refinanced with the \&quot;new\&quot; or \&quot;refinancing\&quot; loan, while the \&quot;consolidated loan\&quot; represents the combination of these two loans
     * @alias module:model/RefinancingLoanDetailsModel
     */
    constructor() { 
        
        RefinancingLoanDetailsModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RefinancingLoanDetailsModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RefinancingLoanDetailsModel} obj Optional instance to populate.
     * @return {module:model/RefinancingLoanDetailsModel} The populated <code>RefinancingLoanDetailsModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RefinancingLoanDetailsModel();

            if (data.hasOwnProperty('loanId')) {
                obj['loanId'] = ApiClient.convertToType(data['loanId'], 'String');
            }
            if (data.hasOwnProperty('loanNumber')) {
                obj['loanNumber'] = ApiClient.convertToType(data['loanNumber'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanOriginalAmount')) {
                obj['oldLoanOriginalAmount'] = ApiClient.convertToType(data['oldLoanOriginalAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanFundedAmount')) {
                obj['oldLoanFundedAmount'] = ApiClient.convertToType(data['oldLoanFundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanDiscount')) {
                obj['oldLoanDiscount'] = ApiClient.convertToType(data['oldLoanDiscount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanDiscountAmount')) {
                obj['oldLoanDiscountAmount'] = ApiClient.convertToType(data['oldLoanDiscountAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanRepaymentAmount')) {
                obj['oldLoanRepaymentAmount'] = ApiClient.convertToType(data['oldLoanRepaymentAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanRepaymentFundedAmount')) {
                obj['oldLoanRepaymentFundedAmount'] = ApiClient.convertToType(data['oldLoanRepaymentFundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanRepaymentDiscountAmount')) {
                obj['oldLoanRepaymentDiscountAmount'] = ApiClient.convertToType(data['oldLoanRepaymentDiscountAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanUnpaidAmount')) {
                obj['oldLoanUnpaidAmount'] = ApiClient.convertToType(data['oldLoanUnpaidAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanUnpaidFundedAmount')) {
                obj['oldLoanUnpaidFundedAmount'] = ApiClient.convertToType(data['oldLoanUnpaidFundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('oldLoanUnpaidDiscountAmount')) {
                obj['oldLoanUnpaidDiscountAmount'] = ApiClient.convertToType(data['oldLoanUnpaidDiscountAmount'], 'Number');
            }
            if (data.hasOwnProperty('newLoanIncreaseAmount')) {
                obj['newLoanIncreaseAmount'] = ApiClient.convertToType(data['newLoanIncreaseAmount'], 'Number');
            }
            if (data.hasOwnProperty('newLoanIncreaseFundedAmount')) {
                obj['newLoanIncreaseFundedAmount'] = ApiClient.convertToType(data['newLoanIncreaseFundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('newLoanIncreaseDiscount')) {
                obj['newLoanIncreaseDiscount'] = ApiClient.convertToType(data['newLoanIncreaseDiscount'], 'Number');
            }
            if (data.hasOwnProperty('newLoanIncreaseDiscountAmount')) {
                obj['newLoanIncreaseDiscountAmount'] = ApiClient.convertToType(data['newLoanIncreaseDiscountAmount'], 'Number');
            }
            if (data.hasOwnProperty('consolidatedLoanOriginalAmount')) {
                obj['consolidatedLoanOriginalAmount'] = ApiClient.convertToType(data['consolidatedLoanOriginalAmount'], 'Number');
            }
            if (data.hasOwnProperty('consolidatedLoanFundedAmount')) {
                obj['consolidatedLoanFundedAmount'] = ApiClient.convertToType(data['consolidatedLoanFundedAmount'], 'Number');
            }
            if (data.hasOwnProperty('consolidatedLoanDiscount')) {
                obj['consolidatedLoanDiscount'] = ApiClient.convertToType(data['consolidatedLoanDiscount'], 'Number');
            }
            if (data.hasOwnProperty('consolidatedLoanDiscountAmount')) {
                obj['consolidatedLoanDiscountAmount'] = ApiClient.convertToType(data['consolidatedLoanDiscountAmount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Gets or sets the refinancing loan's unique identifier
 * @member {String} loanId
 */
RefinancingLoanDetailsModel.prototype['loanId'] = undefined;

/**
 * Gets or sets the refinancing loan's Loan Number, an ordinal value indicating which of a customer's loans is here detailed
 * @member {Number} loanNumber
 */
RefinancingLoanDetailsModel.prototype['loanNumber'] = undefined;

/**
 * Gets or sets the old loan's Original Amount, the total amount due to be repaid on maturity
 * @member {Number} oldLoanOriginalAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanOriginalAmount'] = undefined;

/**
 * Gets or sets the old loan's Funded Amount, the total amount loaned to the customer
 * @member {Number} oldLoanFundedAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanFundedAmount'] = undefined;

/**
 * Gets or sets the old loan's discount rate
 * @member {Number} oldLoanDiscount
 */
RefinancingLoanDetailsModel.prototype['oldLoanDiscount'] = undefined;

/**
 * Gets or sets the discount fee associated with the old loan
 * @member {Number} oldLoanDiscountAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanDiscountAmount'] = undefined;

/**
 * Gets or sets the amount repaid on the old loan
 * @member {Number} oldLoanRepaymentAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanRepaymentAmount'] = undefined;

/**
 * Gets or sets the value of OldLoanRepaymentAmount accounted for by the Funded Amount
 * @member {Number} oldLoanRepaymentFundedAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanRepaymentFundedAmount'] = undefined;

/**
 * Gets or sets the value of OldLoanRepaymentAmount accounted for by the Discount Amount
 * @member {Number} oldLoanRepaymentDiscountAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanRepaymentDiscountAmount'] = undefined;

/**
 * Gets or sets the amount yet to be repaid on the old loan
 * @member {Number} oldLoanUnpaidAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanUnpaidAmount'] = undefined;

/**
 * Gets or sets the value of OldLoanUnpaidAmount accounted for by the Funded Amount
 * @member {Number} oldLoanUnpaidFundedAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanUnpaidFundedAmount'] = undefined;

/**
 * Gets or sets the value of OldLoanUnpaidAmount accounted for by the Discount Amount
 * @member {Number} oldLoanUnpaidDiscountAmount
 */
RefinancingLoanDetailsModel.prototype['oldLoanUnpaidDiscountAmount'] = undefined;

/**
 * Gets or sets the value by which the new loan will increase the Original Amount to be repaid by the customer
 * @member {Number} newLoanIncreaseAmount
 */
RefinancingLoanDetailsModel.prototype['newLoanIncreaseAmount'] = undefined;

/**
 * Gets or sets the value of NewLoanIncreaseAmount accounted for by the Funded Amount
 * @member {Number} newLoanIncreaseFundedAmount
 */
RefinancingLoanDetailsModel.prototype['newLoanIncreaseFundedAmount'] = undefined;

/**
 * Gets or sets the new loan's discount rate
 * @member {Number} newLoanIncreaseDiscount
 */
RefinancingLoanDetailsModel.prototype['newLoanIncreaseDiscount'] = undefined;

/**
 * Gets or sets the value of NewLoanIncreaseAmount accounted for by the Discount Amount
 * @member {Number} newLoanIncreaseDiscountAmount
 */
RefinancingLoanDetailsModel.prototype['newLoanIncreaseDiscountAmount'] = undefined;

/**
 * Gets or sets the consolidated loan's Original Amount, the total amount due to be repaid on maturity
 * @member {Number} consolidatedLoanOriginalAmount
 */
RefinancingLoanDetailsModel.prototype['consolidatedLoanOriginalAmount'] = undefined;

/**
 * Gets or sets the consolidated loan's Funded Amount, the total amount loaned to the customer
 * @member {Number} consolidatedLoanFundedAmount
 */
RefinancingLoanDetailsModel.prototype['consolidatedLoanFundedAmount'] = undefined;

/**
 * Gets or sets the consolidated loan's discount rate
 * @member {Number} consolidatedLoanDiscount
 */
RefinancingLoanDetailsModel.prototype['consolidatedLoanDiscount'] = undefined;

/**
 * Gets or sets the discount fee associated with the consolidated loan
 * @member {Number} consolidatedLoanDiscountAmount
 */
RefinancingLoanDetailsModel.prototype['consolidatedLoanDiscountAmount'] = undefined;






export default RefinancingLoanDetailsModel;

